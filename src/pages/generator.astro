---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Générateur SVG">
  <div class="h-screen p-4 bg-base-200">
    <!-- Top section: SVG preview and code side by side -->
    <div class="grid grid-cols-2 gap-4 h-2/3 mb-4">
      <!-- Section 1 : Aperçu SVG -->
      <div class="card bg-base-100 shadow-xl">
        <div class="card-body">
          <div
            id="svg-container"
            class="flex items-center justify-center h-full bg-base-200 rounded-lg"
          >
            <svg width="200" height="200">
              <circle cx="100" cy="100" r="80" fill="#60a5fa"></circle>
            </svg>
          </div>
        </div>
      </div>

      <!-- Section 2 : Code généré -->
      <div class="card bg-base-100 shadow-xl">
        <div class="card-body p-0">
          <div class="mockup-code h-full">
            <pre id="svg-output" data-prefix="$"></pre>
          </div>
        </div>
      </div>
    </div>

    <!-- Bottom section: Prompt input -->
    <div class="h-1/3">
      <div class="card bg-base-100 shadow-xl h-full">
        <div class="card-body">
          <div class="flex gap-4 items-center h-full">
            <textarea
              id="user-prompt"
              class="textarea textarea-bordered flex-1 resize-none"
              placeholder="Décrivez votre SVG..."
              rows="3"></textarea>
            <button id="generate-button" class="btn btn-primary">Générer</button
            >
            <button id="save-button" class="btn btn-sm btn-success" disabled
              >Sauvegarder</button
            >
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  //@ts-nocheck
  let promptList = [];
  async function generateSVG(prompt) {
    console.log("Generating SVG for prompt:", prompt);
    const res = await fetch("/api/generateSVG", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(prompt),
    });
    const data = await res.json();
    return data.svg;
  }

  async function saveSVG(name, svgCode) {
    try {
      const response = await fetch("/api/saveSVG", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ name, svgCode }),
      });

      if (!response.ok) {
        throw new Error(`Erreur ${response.status}`);
      }

      const result = await response.json();
      return result;
    } catch (error) {
      console.error("Erreur sauvegarde:", error);
      throw error;
    }
  }
  async function handleSubmit() {
    let prompt = "";
    let aiResponse = "";
    const promptElement = document.getElementById("user-prompt");
    prompt = promptElement ? promptElement.value : "";
    console.log("submitted: ", prompt);
    // Réinitialiser la liste des prompts
    promptList.length = 0;
    promptList.push({ role: "user", content: prompt });
    const svgContainer = document.getElementById("svg-container");
    // Afficher un spinner
    svgContainer.innerHTML = `<span class="loading loading-ring loading-xl"></span>`;
    generateButton.disabled = true;
    // editButton.disabled = true;
    let svgOutput = document.getElementById("svg-output");
    // Appeler la fonction pour générer le SVG
    aiResponse = await generateSVG(promptList);
    // Extraire le SVG de la réponse
    const svgMatch = aiResponse.content.match(/<svg[\s\S]*?<\/svg>/i);
    aiResponse.content = svgMatch ? svgMatch[0] : "";
    console.log("svgCode: ", aiResponse.content);
    // Ajouter la réponse de l'IA à la liste des prompts
    promptList.push(aiResponse);
    // Afficher le SVG généré
    svgOutput.textContent = aiResponse.content;
    svgContainer.innerHTML = aiResponse.content;
    // Réactiver les boutons
    generateButton.disabled = false;
    // editButton.disabled = false;
  }
  // async function handleSubmit() {
  //   let prompt = "";
  //   let svgCode = "";
  //   const promptElement = document.getElementById("user-prompt");
  //   prompt = promptElement ? promptElement.value : "";
  //   console.log("submitted: ", prompt); // message affiché sur votre console d'inspecteur dans le navigateur

  //   const svgContainer = document.getElementById("svg-container");
  //   let svgOutput = document.getElementById("svg-output");
  //   const generateButton = document.getElementById("generate-button");

  //   // Ajouter le loading spinner et désactiver le bouton
  //   svgContainer.innerHTML = `<span class="loading loading-ring loading-xl"></span>`;
  //   generateButton.disabled = true;

  //   svgCode = await generateSVG(prompt);
  //   console.log("svgCode: ", svgCode);
  //   svgOutput.textContent = svgCode;
  //   svgContainer.innerHTML = svgCode;
  //   generateButton.disabled = false;
  // }
  const generateButton = document.getElementById("generate-button");
  if (generateButton) {
    generateButton.addEventListener("click", handleSubmit);
  }
</script>
